model {
  ssd {
    num_classes: 7
    image_resizer {
      fixed_shape_resizer {
        height: 512
        width: 512
      }
    }
    feature_extractor {
      # ssd mobilenet v2 fpn mixnet (ssd_mobilenet_v2_custom_v10)
      type: "ssd_mobilenet_v2_custom_v10"
      depth_multiplier: 1.0
      min_depth: 16
      conv_hyperparams {
        regularizer {
          l2_regularizer {
            weight: 3.99999989895e-05
          }
        }
        initializer {
          truncated_normal_initializer {
            mean: 0.0
            stddev: 0.0299999993294
          }
        }
        activation: RELU_6
        batch_norm {
          decay: 0.9
          center: true
          scale: true
          epsilon: 0.00001
          train: true
        }
      }
      use_depthwise: true
      use_explicit_padding: true
      override_base_feature_extractor_hyperparams: true
    }
    box_coder {
      faster_rcnn_box_coder {
        y_scale: 10.0
        x_scale: 10.0
        height_scale: 5.0
        width_scale: 5.0
      }
    }
    matcher {
      argmax_matcher {
        matched_threshold: 0.5
        unmatched_threshold: 0.5
        ignore_thresholds: false
        negatives_lower_than_unmatched: true
        force_match_for_each_row: true

        use_matmul_gather: true
      }
    }
    similarity_calculator {
      iou_similarity {
      }
    }
    box_predictor {
      convolutional_box_predictor {
        conv_hyperparams {
          regularizer {
            l2_regularizer {
              weight: 3.99999989895e-05
            }
          }
          initializer {
            truncated_normal_initializer {
              mean: 0.0
              stddev: 0.0299999993294
            }
          }
          activation: RELU_6
          batch_norm {
            decay: 0.9
            center: true
            scale: true
            epsilon: 0.00001
            train: true
          }
        }
        min_depth: 0
        max_depth: 0
        num_layers_before_predictor: 0
        use_dropout: false
        dropout_keep_probability: 0.800000011921
        kernel_size: 3
        box_code_size: 4
        apply_sigmoid_to_scores: false
        use_depthwise: true
        
        #box_encodings_clip_range{
        #  min: 0.
        #  max: 1.
        #}
        
        reduce_last_predict_layer: 2
      }
    }
    anchor_generator {
      ssd_anchor_generator {
        num_layers: 6
        #min_scale: 0.20000000298
        #max_scale: 0.949999988079
        scales: [0.04, 0.1, 0.26, 0.42, 0.58, 0.74, 0.9]
        aspect_ratios: 1.0
        aspect_ratios: 2.0
        aspect_ratios: 0.5
        aspect_ratios: 3.0
        aspect_ratios: 0.333299994469
        
        height_stride: [8, 16, 32, 64, 128, 256]
        width_stride: [8, 16, 32, 64, 128, 256]

        #reduce_boxes_in_lowest_layer: false
      }
    }
    post_processing {
      batch_non_max_suppression {
        #score_threshold: 0.300000011921
        score_threshold: 0.01
        iou_threshold: 0.45
        
        #score_threshold: 1e-8
        #iou_threshold: 0.5
        max_detections_per_class: 100
        max_total_detections: 100
      }
      #score_converter: SIGMOID
      score_converter: SOFTMAX
    }
    normalize_loss_by_num_matches: true
    normalize_loc_loss_by_codesize: true
    loss {
      localization_loss {
        weighted_smooth_l1 {
        }
      }
      
      classification_loss {
        weighted_softmax{
        }
      }
      
      hard_example_miner {
        num_hard_examples: 3000
        iou_threshold: 0.99
        loss_type: CLASSIFICATION
        max_negatives_per_positive: 3
        min_negatives_per_image: 3
      }
      classification_weight: 1.0
      localization_weight: 1.0
    }
  }
}
train_config {

  data_augmentation_options {
    random_distort_color {
      color_ordering: 0
    }
  }

  #data_augmentation_options {
  #  random_adjust_brightness {
  #  }
  #}

  #data_augmentation_options {
  #  random_adjust_contrast {
  #  }
  #}
  
  data_augmentation_options {
    ssd_random_crop_pad {
      operations {
        min_object_covered: 0.1

        min_aspect_ratio: 1.0
        max_aspect_ratio: 4.0

        min_area: 0.1
        max_area: 1.0

        overlap_thresh: 0.1

        clip_boxes: true

        random_coef: 0.15

        min_padded_size_ratio: 1.0
        min_padded_size_ratio: 1.0
        max_padded_size_ratio: 2.0
        max_padded_size_ratio: 2.0
      
        pad_color_r: 123
        pad_color_g: 117
        pad_color_b: 104
      }
      operations {
        min_object_covered: 0.3

        min_aspect_ratio: 1.0
        max_aspect_ratio: 4.0

        min_area: 0.1
        max_area: 1.0

        overlap_thresh: 0.3

        clip_boxes: true

        random_coef: 0.15


        min_padded_size_ratio: 1.0
        min_padded_size_ratio: 1.0
        max_padded_size_ratio: 2.0
        max_padded_size_ratio: 2.0
      
        pad_color_r: 123
        pad_color_g: 117
        pad_color_b: 104
      }
      operations {
        min_object_covered: 0.5

        min_aspect_ratio: 1.0
        max_aspect_ratio: 4.0

        min_area: 0.1
        max_area: 1.0

        overlap_thresh: 0.5

        clip_boxes: true

        random_coef: 0.15


        min_padded_size_ratio: 1.0
        min_padded_size_ratio: 1.0
        max_padded_size_ratio: 2.0
        max_padded_size_ratio: 2.0
      
        pad_color_r: 123
        pad_color_g: 117
        pad_color_b: 104
      }
      operations {
        min_object_covered: 0.7

        min_aspect_ratio: 1.0
        max_aspect_ratio: 4.0

        min_area: 0.1
        max_area: 1.0

        overlap_thresh: 0.7

        clip_boxes: true

        random_coef: 0.15


        min_padded_size_ratio: 1.0
        min_padded_size_ratio: 1.0
        max_padded_size_ratio: 2.0
        max_padded_size_ratio: 2.0
      
        pad_color_r: 123
        pad_color_g: 117
        pad_color_b: 104
      }
      operations {
        min_object_covered: 0.9

        min_aspect_ratio: 1.0
        max_aspect_ratio: 4.0

        min_area: 0.1
        max_area: 1.0

        overlap_thresh: 0.9

        clip_boxes: true

        random_coef: 0.15


        min_padded_size_ratio: 1.0
        min_padded_size_ratio: 1.0
        max_padded_size_ratio: 2.0
        max_padded_size_ratio: 2.0
      
        pad_color_r: 123
        pad_color_g: 117
        pad_color_b: 104
      }
      operations {
        min_object_covered: 1.0

        min_aspect_ratio: 1.0
        max_aspect_ratio: 4.0

        min_area: 0.1
        max_area: 1.0

        overlap_thresh: 1.0

        clip_boxes: true

        random_coef: 0.15


        min_padded_size_ratio: 1.0
        min_padded_size_ratio: 1.0
        max_padded_size_ratio: 2.0
        max_padded_size_ratio: 2.0
      
        pad_color_r: 123
        pad_color_g: 117
        pad_color_b: 104
      }
    }
  }
  
  data_augmentation_options {
    random_horizontal_flip {
    }
  }

  optimizer {
    momentum_optimizer: {
      learning_rate: {
        cosine_decay_learning_rate {
          learning_rate_base: .0004
          total_steps: 200000
          warmup_learning_rate: 0.00003333333333
          warmup_steps: 5000
        }
      }
      momentum_optimizer_value: 0.9
    }
    use_moving_average: false
  }

  batch_size: 64
  sync_replicas: true
  startup_delay_steps: 0.0
  replicas_to_aggregate: 16
  max_number_of_boxes: 100
  unpad_groundtruth_tensors: false

  num_steps: 1

  #fine_tune_checkpoint: "/tf/minda/github/detect_ws/save_models/tensorflow/tf_15/ssdlite_mobilenet_v2_fpn6_512_mixconv_anchor_3_bdd_better_15/model.ckpt-0"
  
  fine_tune_checkpoint: "123"

  load_all_detection_checkpoint_vars: true
  fine_tune_checkpoint_type: "detection"
  from_detection_checkpoint: true
}

train_input_reader {
  label_map_path: "/tf/minda/github/TKU_RVL/label/bdd_label_map_custom.pbtxt"
  tf_record_input_reader {
    input_path: ["/tf/minda/github/TKU_RVL/dataset/tfrecord/bdd/train.record"]
  }
}

eval_config {
  num_examples: 4952
  max_evals: 10
  use_moving_averages: false
  metrics_set: "coco_detection_metrics"
}

eval_input_reader {
  label_map_path: "/tf/minda/github/TKU_RVL/label/bdd_label_map_custom.pbtxt"
  shuffle: false
  num_readers: 1
  tf_record_input_reader {
    input_path: ""
  }
}

# quantization aware training
#graph_rewriter {
#  quantization {
#    delay: 10000
#    weight_bits: 8
#    activation_bits: 8
#  }
#}
